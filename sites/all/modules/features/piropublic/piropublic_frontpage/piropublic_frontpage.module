<?php

include_once('piropublic_frontpage.features.inc');


/**
 * Implementation of hook_perm()
 */

function piropublic_frontpage_perm() {
  return array('manage frontpage_banner cycle order');
}

/**
 * Implementation of hook_init()
 */
function piropublic_frontpage_init() {
  drupal_add_css(drupal_get_path('module', 'piropublic_frontpage') . '/theme/css/piropublic_frontpage.css');
  if (file_exists(drupal_get_path('module', 'piropublic_frontpage') . '/theme/css/' . variable_get('theme_default', 'garland'). '.css')) {
    drupal_add_css(drupal_get_path('module', 'piropublic_frontpage') . '/theme/css/' . variable_get('theme_default', 'garland'). '.css');
  }
}

/**
* Implements hook_theme().
*/
function piropublic_frontpage_theme() {
  return array(
    // need to use custom template to fix link module target=blank fail
  	'views_view_fields__legislative_efforts' => array(
      'template' => 'views-view-fields--legislative-efforts',
      'original hook' => 'views_view_fields',
      'path' => drupal_get_path('module', 'piropublic_frontpage') . '/theme/templates/',
   	  'preprocess functions' => array(
      	'template_preprocess',
      	'template_preprocess_views_view_fields',
        'piropublic_frontpage_preprocess_views_view_fields__legislative_efforts',
      ),
      'arguments' => array('view' => NULL, 'options' => NULL, 'row' => NULL),
    ),
    'views_view_fields__upcoming_events' => array(
      'template' => 'views-view-fields--upcoming-events',
      'original hook' => 'views_view_fields',
      'path' => drupal_get_path('module', 'piropublic_frontpage') . '/theme/templates/',
   	  'preprocess functions' => array(
      	'template_preprocess',
      	'template_preprocess_views_view_fields',
        'piropublic_frontpage_preprocess_views_view_fields__upcoming_events',
      ),
      'arguments' => array('view' => NULL, 'options' => NULL, 'row' => NULL),
    ),
  	'views_view_fields__frontpage_banner' => array(
      'template' => 'views-view-fields--frontpage-banner',
      'original hook' => 'views_view_fields',
      'path' => drupal_get_path('module', 'piropublic_frontpage') . '/theme/templates/',
   	  'preprocess functions' => array(
      	'template_preprocess',
      	'template_preprocess_views_view_fields',
        'piropublic_frontpage_preprocess_views_view_fields__frontpage_banner',
      ),
      'arguments' => array('view' => NULL, 'options' => NULL, 'row' => NULL),
    ),
  );
}

/**
 * Implements hook_preprocess()
 */
function piropublic_frontpage_preprocess_views_view_fields__legislative_efforts(&$variables) {
  // need to use custom template to fix link module target=blank fail
  $variables['fields']['field_feat_image_fid']->attributes = unserialize($variables['row']->node_data_field_legislative_field_featured_block_link_attributes);
  $variables['fields']['field_feat_image_fid']->attributes['target'] ?
    $variables['fields']['field_feat_image_fid']->content = l($variables['fields']['field_feat_image_fid']->content, $variables['fields']['field_featured_block_link_url']->content, array('attributes' => array('target' => $variables['fields']['field_feat_image_fid']->attributes['target']), 'html' => 'true')) :
    $variables['fields']['field_feat_image_fid']->content = l($variables['fields']['field_feat_image_fid']->content, $variables['fields']['field_featured_block_link_url']->content, array('attributes' => array('target' => '_self'), 'html' => 'true'));

  if (!user_access('create featured_blocks content')) {
    unset($variables['fields']['nothing']);
  }

  $variables['admin_links'] = $variables['fields']['nothing']->content . $variables['fields']['edit_node']->content . $variables['fields']['delete_node']->content;
}

/**
 * Implements hook_preprocess()
 */
function piropublic_frontpage_preprocess_views_view_fields__upcoming_events(&$variables) {
  // need to use custom template to fix link module target=blank fail
  $variables['fields']['field_feat_image_fid']->attributes = unserialize($variables['row']->node_data_field_event_field_featured_block_link_attributes);
  $variables['fields']['field_feat_image_fid']->attributes['target'] ?
    $variables['fields']['field_feat_image_fid']->content = l($variables['fields']['field_feat_image_fid']->content, $variables['fields']['field_featured_block_link_url']->content, array('attributes' => array('target' => $variables['fields']['field_feat_image_fid']->attributes['target']), 'html' => 'true')) :
    $variables['fields']['field_feat_image_fid']->content = l($variables['fields']['field_feat_image_fid']->content, $variables['fields']['field_featured_block_link_url']->content, array('attributes' => array('target' => '_self'), 'html' => 'true'));

  if (!user_access('create featured_blocks content')) {
    unset($variables['fields']['nothing']);
  }

  $variables['admin_links'] = $variables['fields']['nothing']->content . $variables['fields']['edit_node']->content . $variables['fields']['delete_node']->content;
}

/**
 * Implements hook_preprocess()
 */
function piropublic_frontpage_preprocess_views_view_fields__frontpage_banner(&$variables) {
  // need to use custom template to fix link module target=blank fail
  if (!user_access('create frontpage_banner content')) {
    unset($variables['fields']['nothing']);
  }

  if (user_access('manage frontpage_banner cycle order')) {
    $cycle_order = l(t('manage cycle order'), '/admin/content/nodequeue/' .$variables['fields']['sqid']->raw. '/view');
  }

  $variables['admin_links'] = $variables['fields']['nothing']->content . $variables['fields']['edit_node']->content . $variables['fields']['delete_node']->content . $cycle_order . $variables['fields']['nodequeue_links']->content;

  if ($variables['fields']['field_frontpage_banner_type_value']->raw == 'video') {
    $variables['video'] = TRUE;
  }
  if (isset($variables['video'])) {
    drupal_add_js(drupal_get_path('module', 'piropublic_frontpage') . '/theme/js/watch-button.js');
    $variables['video'] = $variables['fields']['field_frontpage_banner_videotype_value']->raw;
    $appender = 'node_data_field_frontpage_banner_img_field_frontpage_banner_' .$variables['video']. '_value';
    $variables['button'] = l(t("!text", array('!text' => 'CLICK <em>the</em> VIDEO')), '/emvideo/modal/' .$variables['row']->nid. '/610/350/field_frontpage_banner_' .$variables['video']. '/' .$variables['video']. '/' . $variables['row']->$appender, array('attributes' => array('class' => 'emvideo-watch-button'), 'html' => 'true'));

    $variables['media'] = $variables['fields']['field_frontpage_banner_' .$variables['video']. '_embed']->content;
    $variables['source'] = $variables['fields']['field_frontpage_banner_' .$variables['video']. '_provider']->content;

    if ($variables['video'] == 'other') {
      // need better solution for next line;
      $variables['media'] = t("!embed", array('!embed' => $variables['fields']['field_frontpage_banner_embed_value']->raw));
      $variables['source'] = $variables['fields']['field_frontpage_banner_vidsrc_value']->content;
      $variables['button'] = t("!text", array('!text' => 'CLICK <em>the</em> VIDEO'));
      $variables['attr']['classes'] = 'embed-other-wrapper';
    }
  }
  else {
    $variables['media'] = $variables['fields']['field_frontpage_banner_img_fid']->content;
    $variables['source'] = $variables['fields']['field_frontpage_banner_imgsrc_value']->content;

    $variables['fields']['title']->attributes = unserialize($variables['row']->node_data_field_frontpage_banner_img_field_frontpage_banner_link_attributes);
    $variables['fields']['title']->attributes['target'] ?
      $variables['fields']['title']->attributes['target'] : $variables['fields']['title']->attributes['target'] = '_self';
    $variables['fields']['title']->content = l($variables['fields']['title']->content, $variables['fields']['field_frontpage_banner_link_url']->content, array('attributes' => array('target' => $variables['fields']['title']->attributes['target']), 'html' => 'true'));

     $variables['fields']['field_frontpage_banner_btntxt_value']->content ?
      $variables['button'] = $variables['fields']['field_frontpage_banner_btntxt_value']->content : $variables['button'] = t("READ MORE");
    $variables['button'] =  l($variables['button'], $variables['fields']['field_frontpage_banner_link_url']->content, array('attributes' => array('target' => $variables['fields']['title']->attributes['target']), 'html' => 'true'));
  }
}

/**
 * Implementation of hook_form_alter()
 *
 * need to use instead of hook_FORM_ID_alter() because need for other modules to alter first.
 *
 */
function piropublic_frontpage_form_alter(&$form, &$form_state, $form_id) {
  unset($form['buttons']['preview']);
  switch ($form_id) {
    case 'featured_blocks_node_form':
      /* temp disabled
      if (!module_exists('piropublic_events')) {
        $form['field_events']['#description'] = '<small class="red">' . t('piropublic_events module required for this option') . '</small>';
        $form['#after_build'][] = '_piropublic_after_build';
      }
      */
      if (!module_exists('piropublic_store')) {
        $form['field_store']['#description'] = '<small class="red">' . t('piropublic_store module required for this option') . '</small>';
        $form['#after_build'][] = '_piropublic_after_build';
      }
    break;
  }
}

/**
* Custom after_build callback handler.
*/
function _piropublic_frontpage_after_build($form, &$form_state) {
  switch ($form['form_id']['#value']) {
    case 'featured_blocks_node_form':
      /* enable for now
      if (!module_exists('piropublic_events')) {
        _piropublic_fix_disabled($form['group_promote']['field_events']);
      }
      */
      if (!module_exists('piropublic_store')) {
        _piropublic_frontpage_fix_disabled($form['group_promote']['field_store']);
      }
    break;
  }
  return $form;
}

/**
* Recursively set the disabled attribute of a CCK field
* and all its dependent FAPI elements.
*/
function _piropublic_frontpage_fix_disabled(&$elements) {
  foreach (element_children($elements) as $key) {
    if (isset($elements[$key]) && $elements[$key]) {

      // Recurse through all children elements.
      _piropublic_frontpage_fix_disabled($elements[$key]);
    }
  }

  if (!isset($elements['#attributes'])) {
    $elements['#attributes'] = array();
  }
  $elements['#attributes']['disabled'] = 'disabled';
}