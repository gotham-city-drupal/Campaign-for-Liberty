<?php
// $Id: hosting_stats.module,v 1.1 2010/05/26 22:51:51 chrisyates Exp $
/**
 * @file hosting_stats.module
 * TODO: Enter file description here.
 */

/**
 * Implementation of hook_menu().
 */
function hosting_stats_menu() {
  $items['admin/settings/hosting_stats'] = array(
    'title' => t('Hosting Diagnostics'),
    'description' => t('Hosting diagnostic settings.'),
    'file' => 'hosting_stats.admin.inc',
    'access arguments' => array('administer hosting stats'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hosting_stats_admin_settings'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/reports/hosting_stats'] = array(
    'title' => t('Hosting Diagnostics'),
    'description' => t('Hosting diagnostic reports.'),
    'file' => 'hosting_stats.report.inc',
    'access callback' => 'hosting_stats_reports_access',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hosting_stats_reporting'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/reports/hosting_stats/summary'] = array(
    'title' => t('Email Report'),
    'file' => 'hosting_stats.summary.inc',
    'access callback' => 'hosting_stats_reports_access',
    'page callback' => 'hosting_stats_send',
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implementation of hook_perm().
 */
function hosting_stats_perm() {
  return array('administer hosting stats', 'view hosting stats');
}

/**
 * Access arguments for reports page.
 */
function hosting_stats_reports_access() {
  return user_access('administer hosting stats') || user_access('view hosting stats');
}

/**
 * Implementation of hook_exit().
 */
function hosting_stats_exit() {
  if (variable_get('hosting_stats_logging', 0)) {
    global $user;
    $usertype = $user->uid ? 1 : 0;
    $stats = array(
      'usertype' => $usertype,
      'timestamp' => time(),
    );
    db_query("INSERT INTO {hosting_stats_log} VALUES (%d, %d)", array($stats['usertype'], $stats['timestamp']));
  }
}

/**
 * Implementation of hook_cron().
 */
function hosting_stats_cron() {
  // Delete values from the hosting_stats_log table.
  // We're default setting at a million rows by default, which is about 60MB
  // on disk give or take
  $max = db_result(db_query('SELECT timestamp FROM {hosting_stats_log} ORDER BY timestamp DESC LIMIT %d, 1', (int)variable_get('hosting_stats_row_limit', 1000000)));
  db_query('DELETE FROM {hosting_stats_log} WHERE timestamp <= %d', $max);
}